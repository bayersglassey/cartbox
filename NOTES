
COUNTERS COUNT THE NUMBER OF ORDERS SATISFYING SOME PREDICATE.


What is a minimal test for generating a correct statistic?
    * start with no orders
    * place order with banana and apple
    * place order with just banana
    * stats should show:
        * if you order apple, you have 100% chance of ordering banana
        * if you order banana, you have 50% chance of ordering apple

TODO:

    * Actually make suggestions.

    * Change CharFields ('sku' etc) to ForeignKeys (to Product etc)?
        The 'cart' app is part of CartBox -- just usually people won't
        use the built-in e-commerce interface, they'll populate the data
        from an external source.

    * Instead of 'suggested' BooleanField, have a 'tags' CharField
        which is a set of strings encoded as a comma-separated list?
        But keep in mind the predicate is applied to an entire order.
        So 'suggested' means: *at least one of the order's items* was
        a suggested item.

    * Add "By User" checkbox to the various analytics Forms, so you can
        choose whether to see "suggested for you" or "customers also bought".


ISSUES:

    * Is there a Django field which will render as <select multiple>?..
        'Cos otherwise we're gonna have to figure out how to pass POSTed
        skus and suggested_skus to the template so it can render
        <option selected>s all over the place. You know?

        Actually, we could just use forms.ChoiceField...
        [
            (None, '-'),
            (True, 'Yes'),
            (False, 'No'),
        ]

        Or does forms.BooleanField allow something fancy with empty_values
        or whatever?..

